{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\build\\\\December Stack\\\\Bridgemap Draft1\\\\bridgemap-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { GoogleMap, Marker, useLoadScript // Marker,\n// InfoWindow,\n} from \"@react-google-maps/api\"; // import { formatRelative } from \"date-fns\";\n// import {\n//     Combobox,\n//     ComboboxInput,\n//     ComboboxPopover,\n//     ComboboxList,\n//     ComboboxOption,\n//     ComboboxOptionText,\n//   } from \"@reach/combobox\";\n\nimport \"@reach/combobox/styles.css\";\nimport mapStyles from \"./mapStyles.js\";\nconst libraries = [\"places\"];\nconst mapContainerStyle = {\n  height: \"100vh\",\n  width: \"100vw\"\n};\nconst options = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst center = {\n  lat: 41.179192,\n  lng: -73.189484\n};\nconst APIKEY = \"AIzaSyCPJi6Y01w_JspvfKuX55S_a0PATO5ssU4\";\nexport default function App() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: APIKEY,\n    // googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries\n  });\n  const [markers, setMarkers] = React.useState([]);\n  const [selected, setSelected] = React.useState(null);\n  const onMapClick = React.useCallback(event => {\n    setMarkers(current => [...current, {\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng(),\n      time: new Date()\n    }]);\n  }, []);\n  const mapRef = React.useRef();\n  const onMapLoad = React.useCallback(map => {\n    mapRef.current = map;\n  }, []);\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading Maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Testa De Nevill's Bridge \", '', /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"crown\",\n        children: \"\\uD83D\\uDDFA\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: 8,\n      options: options,\n      onClick: onMapClick,\n      onLoad: onMapLoad,\n      children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: {\n          url: '/greenFlag.png',\n          scaledSize: new window.google.maps.Size(30, 30),\n          origin: new window.google.maps.Point(0, 0),\n          anchor: new window.google.maps.Point(15, 15)\n        },\n        onClick: () => {\n          setSelected(marker);\n          console.log(marker.data);\n        }\n      }, marker.time.toISOString(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n}\n\n_s(App, \"HyDyb1nIM3Rs9T3MKDPEtfZQEZk=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/build/December Stack/Bridgemap Draft1/bridgemap-app/src/App.js"],"names":["React","GoogleMap","Marker","useLoadScript","mapStyles","libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","APIKEY","App","isLoaded","loadError","googleMapsApiKey","markers","setMarkers","useState","selected","setSelected","onMapClick","useCallback","event","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","marker","url","scaledSize","window","google","maps","Size","origin","Point","anchor","console","log","data","toISOString"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    GoogleMap,\n    Marker,\n    useLoadScript,\n    // Marker,\n    // InfoWindow,\n} from \"@react-google-maps/api\";\n// import { formatRelative } from \"date-fns\";\n\n\n// import {\n//     Combobox,\n//     ComboboxInput,\n//     ComboboxPopover,\n//     ComboboxList,\n//     ComboboxOption,\n//     ComboboxOptionText,\n//   } from \"@reach/combobox\";\nimport \"@reach/combobox/styles.css\";\n\nimport mapStyles from \"./mapStyles.js\";\n\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n    height: \"100vh\",\n    width: \"100vw\",\n};\n\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true,\n    zoomControl: true,\n}\nconst center = {\n    lat: 41.179192,\n    lng: -73.189484\n};\n\nconst APIKEY = \"AIzaSyCPJi6Y01w_JspvfKuX55S_a0PATO5ssU4\";\n\nexport default function App() {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: APIKEY,\n        // googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n        libraries,\n    });\n    const [markers, setMarkers] = React.useState([]);\n\n    const [selected, setSelected] = React.useState(null);\n\n    const onMapClick = React.useCallback((event) => {\n        setMarkers((current) => [\n            ...current,\n            {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng(),\n                time: new Date(),\n            },\n        ]);\n    }, [])\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n\n\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n\n    return <div>\n        <h1>\n            Testa De Nevill's Bridge {''}<span role=\"img\" aria-label=\"crown\">🗺️</span></h1>\n        <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            center={center}\n            zoom={8}\n            options={options}\n            onClick={onMapClick}\n            onLoad={onMapLoad}\n        >\n            {markers.map((marker) => (\n                <Marker\n                    key={marker.time.toISOString()}\n                    position={{ lat: marker.lat, lng: marker.lng }}\n                    icon={{\n                        url: '/greenFlag.png',\n                        scaledSize: new window.google.maps.Size(30, 30),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(15, 15),\n                    }}\n                    onClick={() => {\n                        setSelected(marker);\n                        console.log(marker.data)\n                    }}\n                />\n            ))}\n        </GoogleMap>\n    </div>;\n}\n"]},"metadata":{},"sourceType":"module"}