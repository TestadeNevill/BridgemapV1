{"version":3,"sources":["App.js","mapStyles.js","reportWebVitals.js","index.js"],"names":["libraries","mapContainerStyle","height","width","options","styles","disableDefaultUI","zoomControl","center","lat","lng","App","useLoadScript","googleMapsApiKey","isLoaded","loadError","React","useState","markers","setMarkers","selected","setSelected","onMapClick","useCallback","event","current","latLng","time","Date","mapRef","useRef","onMapLoad","map","panTo","setZoom","role","aria-label","Locate","Search","zoom","onClick","onLoad","marker","position","icon","url","scaledSize","window","google","maps","Size","origin","Point","anchor","console","log","toISOString","onCloseCLick","formatRelative","className","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","src","alt","usePlacesAutocomplete","requestOptions","location","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","handleSelect","address","a","getGeocode","results","getLatLng","onSelect","onChange","e","target","disabled","placeholder","id","description","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5dc7364c.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    GoogleMap,\n    useLoadScript,\n    Marker,\n    InfoWindow,\n} from \"@react-google-maps/api\";\nimport usePlacesAutocomplete, {\n    getGeocode,\n    getLatLng,\n} from \"use-places-autocomplete\";\n\nimport {\n    Combobox,\n    ComboboxInput,\n    ComboboxPopover,\n    ComboboxList,\n    ComboboxOption,\n} from \"@reach/combobox\";\nimport { formatRelative } from \"date-fns\";\n\nimport \"@reach/combobox/styles.css\";\n\nimport mapStyles from \"./mapStyles.js\";\n\nconst libraries = [\"places\"];\n\nconst mapContainerStyle = {\n    height: \"100vh\",\n    width: \"100vw\",\n};\n\nconst options = {\n    styles: mapStyles,\n    disableDefaultUI: true,\n    zoomControl: true,\n};\nconst center = {\n    lat: 41.179192,\n    lng: -73.189484\n};\n\nconst APIKEY = \"AIzaSyAkjlZ4zHpjrpW2VNAHnrHoLHCN8-ll-4U\";\n\nexport default function App() {\n    const { isLoaded, loadError } = useLoadScript({\n        googleMapsApiKey: APIKEY,\n        // googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n        libraries,\n    });\n    const [markers, setMarkers] = React.useState([]);\n\n    const [selected, setSelected] = React.useState(null);\n\n    const onMapClick = React.useCallback((event) => {\n        setMarkers((current) => [\n            ...current,\n            {\n                lat: event.latLng.lat(),\n                lng: event.latLng.lng(),\n                time: new Date(),\n            },\n        ]);\n    }, [])\n\n    const mapRef = React.useRef();\n    const onMapLoad = React.useCallback((map) => {\n        mapRef.current = map;\n    }, []);\n\n    const panTo = React.useCallback(({ lat, lng }) => {\n        mapRef.current.panTo({ lat, lng });\n        mapRef.current.setZoom(14);\n    }, []);\n\n    if (loadError) return \"Error loading maps\";\n    if (!isLoaded) return \"Loading Maps\";\n\n    return <div>\n        <h1>\n            Testa De Nevill's Bridge {''}<span role=\"img\" aria-label=\"crown\">üó∫Ô∏è</span></h1>\n        <Locate panTo={panTo} />\n        <Search panTo={panTo} />\n        <GoogleMap\n            mapContainerStyle={mapContainerStyle}\n            center={center}\n            zoom={12}\n            options={options}\n            onClick={onMapClick}\n            onLoad={onMapLoad}\n        >\n            {markers.map((marker) => (\n                <Marker\n                    key={marker.time.toISOString()}\n                    position={{ lat: marker.lat, lng: marker.lng }}\n                    icon={{\n                        url: '/greenFlag.png',\n                        scaledSize: new window.google.maps.Size(30, 30),\n                        origin: new window.google.maps.Point(0, 0),\n                        anchor: new window.google.maps.Point(15, 15),\n                    }}\n                    onClick={() => {\n                        setSelected(marker);\n                        console.log(marker.lat, marker.lng)\n                    }}\n                />\n            ))}\n            {selected ? (\n                <InfoWindow\n                    position={{ lat: selected.lat, lng: selected.lng }}\n                    onCloseCLick={() => {\n                        setSelected(null);\n                    }}\n                >\n                    <div>\n                        <h2>\n                            New Location!\n                        </h2>\n                        <p> Here! {formatRelative(selected.time, new Date())}</p>\n                    </div>\n                </InfoWindow>\n            ) : null}\n        </GoogleMap>\n    </div>\n        ;\n}\n\nfunction Locate({ panTo }) {\n    return (\n        <button\n            className=\"locate\"\n            onClick={() => {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        panTo({\n                            lat: position.coords.latitude,\n                            lng: position.coords.longitude,\n                        });\n                    },\n                    () => null\n                );\n            }}\n        >\n            <img src=\"/compass.png\" alt=\"compass\" />\n        </button>\n    );\n}\n\nfunction Search({ panTo }) {\n    const { ready, value, suggestions: { status, data }, setValue, clearSuggestions,\n    } = usePlacesAutocomplete({\n        requestOptions: {\n            location: { lat: () => 41.179192, lng: () => -73.189484 },\n            radius: 200 * 1000,\n        },\n    });\n\n    const handleInput = (e) => {\n        setValue(e.target.value);\n    };\n\n    const handleSelect = async (address) => {\n        setValue(address, false);\n        clearSuggestions();\n\n        try {\n            const results = await getGeocode({ address });\n            const { lat, lng } = await getLatLng(results[0]);\n            panTo({ lat, lng });\n        } catch (error) {\n            console.log(\"üò± Error: \", error);\n        }\n    };\n\n    return (\n        <div className=\"search\">\n            <Combobox onSelect={handleSelect}>\n                <ComboboxInput\n                    value={value}\n                    onChange={handleInput}\n                    disabled={!ready}\n                    placeholder=\"Search your location\"\n                />\n                <ComboboxPopover>\n                    <ComboboxList>\n                        {status === \"OK\" &&\n                            data.map(({ id, description }) => (\n                                <ComboboxOption key={id} value={description} />\n                            ))}\n                    </ComboboxList>\n                </ComboboxPopover>\n            </Combobox>\n        </div>\n    );\n}","export default [\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#FFA800\"\r\n            },\r\n            {\r\n                \"saturation\": 0\r\n            },\r\n            {\r\n                \"lightness\": 0\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#53FF00\"\r\n            },\r\n            {\r\n                \"saturation\": -73\r\n            },\r\n            {\r\n                \"lightness\": 40\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#FBFF00\"\r\n            },\r\n            {\r\n                \"saturation\": 0\r\n            },\r\n            {\r\n                \"lightness\": 0\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#00FFFD\"\r\n            },\r\n            {\r\n                \"saturation\": 0\r\n            },\r\n            {\r\n                \"lightness\": 30\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#00BFFF\"\r\n            },\r\n            {\r\n                \"saturation\": 6\r\n            },\r\n            {\r\n                \"lightness\": 8\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"stylers\": [\r\n            {\r\n                \"hue\": \"#679714\"\r\n            },\r\n            {\r\n                \"saturation\": 33.4\r\n            },\r\n            {\r\n                \"lightness\": -25.4\r\n            },\r\n            {\r\n                \"gamma\": 1\r\n            }\r\n        ]\r\n    }\r\n]","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}